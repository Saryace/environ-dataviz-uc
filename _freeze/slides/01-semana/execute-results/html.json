{
  "hash": "49725f9460b1d7a96b37ff5787aa03de",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Reproducibilidad, Buenas Pr√°cticas y Github\nsubtitle: AGP3141\nformat: \n  revealjs:\n    slide-number: c/t\n    link-external-newwindow: true   \n    link-external-icon: true        \nauthor:\n  - name: Sara E. Acevedo\n    orcid: 0000-0003-3203-2106\n    email: seaceved@uc.cl\n    affiliations: Pontificia Universidad Cat√≥lica de Chile - CEDEUS\nfooter: saryace.github.io/environ-dataviz-uc\n---\n\n## Objetivos de la clase\n\n-   Conceptos e ideas generales de reproducibilidad, buenas pr√°cticas y GitHub\n-   Durante todo el semestre aprenderemos en profundidad estos conceptos\n-   Clase de hoy: motivarlos a incorporar *reproducibilidad* en sus investigaciones\n\n## Temas a ver hoy\n\n::: incremental\n-   Reproducibilidad\n-   Buenas Pr√°cticas\n-   Github (intro)\n:::\n\n## Porqu√©?\n\n::: columns\n::: {.column width=\"50%\"}\n![](figures/lazy.png)\n:::\n\n::: {.column width=\"50%\"}\n::: {.fragment .fade-up}\n-   C√≥digo eficiente nos hace la vida m√°s f√°cil\n:::\n\n::: {.fragment .fade-up}\n-   Somos humanos: c√≥digo claro y entendible minimiza posibilidad de errores\n:::\n\n::: {.fragment .fade-up}\n-   Inter√©s en ciencia abierta y uso de repositorios\n:::\n:::\n:::\n\n## Reproducibilidad\n\nHay diferentes definiciones, durante la clase usaremos las detalladas por [The Turing Way](https://book.the-turing-way.org/)\n\n![](https://book.the-turing-way.org/build/reproducible-matrix-90f25f445963a5b3377962312cffd0cb.jpg){fig-align=\"center\"}\n\n## Reproducibilidad\n\nEjemplo del [Informatics Technology for Cancer Research (ITCR)](https://jhudatascience.org/Adv_Reproducibility_in_Cancer_Informatics/defining-reproducibility.html)\n\n![](https://jhudatascience.org/Adv_Reproducibility_in_Cancer_Informatics/02-defining-reproducibility_files/figure-html/1LMurysUhCjZb7DVF6KS9QmJ5NBjwWVjRn40MS9f2noE_gf1accd298e_0_368.png){fig-align=\"center\"}\n\n## Reproducibilidad\n\n::: columns\n::: {.column width=\"50%\"}\n![](https://book.the-turing-way.org/build/barriers-reproducibi-4f1ba16b498dbe022a8b7dc9eadb67ba.png)\n:::\n\n::: {.column width=\"50%\"}\n::: {.fragment .fade-up}\n-   Habilidades que no siempren est√°n en los programas de postgrado\n:::\n\n::: {.fragment .fade-up}\n-   La falta de incentivos\n:::\n\n::: {.fragment .fade-up}\n-   Juntos en este curso avanzaremos en reproducibilidad de sus proyectos\n:::\n:::\n:::\n\n## Reproducibilidad\n\nTrabajeremos siempre avanzando un poco m√°s, como un cont√≠nuo\n\n![](https://jhudatascience.org/Adv_Reproducibility_in_Cancer_Informatics/02-defining-reproducibility_files/figure-html/1LMurysUhCjZb7DVF6KS9QmJ5NBjwWVjRn40MS9f2noE_gf7bed24491_1_0.png){fig-align=\"center\"} \\# [Reproducibilidad ‚â† Ciencia Abierta]{.r-fit-text} {background-color=\"#40666e\"}\n\n## Buenas Pr√°cticas\n\n::: incremental\n-   Compendio (orden de carpetas y archivos)\n-   Reglas de oro generales\n-   \"Buen\" c√≥digo\n:::\n\n## Compendio\n\nUn compendio es una colecci√≥n de todos los archivos digitales de un proyecto de investigaci√≥n, incluyendo datos, c√≥digo y textos. Debe ser ordenado para que la reproducibilidad de los resultados sea f√°cil de obtener. Por lo general se trabaja en *proyectos* correspondientes a un *directorio*\n\n## \n\n::: {#fig-folder layout-ncol=\"2\"}\n\n![](https://ecorepsci.github.io/reproducible-science/img/activity-based-directory-organization.jpg)\n\n![](https://ecorepsci.github.io/reproducible-science/img/project-based-directory-organization.jpg) \n\nEnfoques\n:::\n\n## Compendio\n\nPasos seg√∫n [workshop-computational-reproducibility UtrechUni](https://utrechtuniversity.github.io/workshop-computational-reproducibility/chapters/project-setup.html)\n\n-   Contener el proyecto en una sola carpeta.\n\n-   Distinguir los tipos de carpetas y nombrarlas de forma adecuada.\n\n-   Siempre incluir un archivo README.\n\n# [Un proyecto = un directorio]{.r-fit-text} {background-color=\"#40666e\"}\n\n## Compendio\n\nEjemplo de [Effective Data Science](https://eds-notes.zakvarty.com/101-workflows-organising-your-work)\n\n![](https://eds-notes.zakvarty.com/images/101-workflows-organising-your-work/directory-structure-drawings/directory-structure-drawing-5.png){fig-align=\"center\"}\n\n## Reglas de oro generales\n\nLista seg√∫n [Reproducible Data Science](https://ecorepsci.github.io/reproducible-science/project-organization.html)\n\n1.  Los datos crudos **nunca** deben modificarse. Datos procesados deben ir en una carpeta aparte\n2.  Resultados de c√≥digo deben guardarse en su propia carpeta (‚Äúoutput‚Äù para resultados y ‚Äúfigures‚Äù para figuras).\n3.  Los c√≥digos van en su propia carpeta (scr por scripts).\n4.  Siempre modularizar el c√≥digo: en lugar de un √∫nico script gigante, dividir el flujo de trabajo en scripts cortos.\n5.  Apuntar escribir a c√≥digo seco: **DRY** do not repeat yourself\n\n## Escribir \"buen\" c√≥digo\n\n::: columns\n::: {.column width=\"50%\"}\n![](https://psyteachr.github.io/reprores-v4/images/memes/wickham-shitty-code.png)\n:::\n\n::: {.column width=\"50%\"}\n::: {.fragment .fade-up}\n-   Le√≠ble por humanos y computadoras, ordenable\n:::\n\n::: {.fragment .fade-up}\n-   Reusable\n:::\n\n::: {.fragment .fade-up}\n-   Robusto\n:::\n:::\n:::\n\n## Le√≠ble por humanos y computadoras, ordenable\n\n{{< video https://www.youtube.com/watch?v=ES1LTlnpLMk\n    title='Ver video de Jenny Bryan?' width=\"600\" height=\"500\"\n>}} \n\n## Le√≠ble por humanos y computadoras, ordenable\n\n![](figures/jenny-bryan.png){fig-align=\"center\"}\n\n## Le√≠ble por humanos y computadoras, ordenable\n\n1. Linters ayudan a ver la sint√°xis del c√≥digo\n2. Stylers pueden formatear c√≥digo\n\n- R: [lintr](https://lintr.r-lib.org/) y [styler](https://styler.r-lib.org/)\n- Python: [ruff-check](https://docs.astral.sh/ruff/) y [ruff-format](https://docs.astral.sh/ruff/)\n\n## Reusable\n\n::: incremental\n-   Separar datos de scripts \n-   Crear el c√≥digo para usar constantes solo una vez (omega = 4.56)\n-   Solo una cosa a la vez, aplica para funciones y scripts\n-   C√≥digo seco (DRY) do not repear yourself\n:::\n\n## Robusto\n\n::: incremental\n\n- Si hay las suposiciones o condiciones, declararlas\n\n- Verificar los valores antes de procesarlos.\n\n- Identificar excepciones.\n\n- Generar errores cuando no se cumplan las expectativas.\n\n:::\n\n## Robusto\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnombre_region <- function(x) {\n  regiones <- data.frame(\n    numero = 1:16,\n    region = c(\n      \"Tarapac√°\", \"Antofagasta\", \"Atacama\", \"Coquimbo\", \"Valpara√≠so\",\n      \"O'Higgins\", \"Maule\", \"Biob√≠o\", \"La Araucan√≠a\", \"Los Lagos\",\n      \"Ays√©n\", \"Magallanes\", \"Metropolitana\", \"Los R√≠os\",\n      \"Arica y Parinacota\", \"√ëuble\"\n    )\n  )\n  regiones$region[match(x, regiones$numero)]\n}\n\nnombre_region(13)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Metropolitana\"\n```\n\n\n:::\n:::\n\n\n## Robusto\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnombre_region <- function(x) {\n  regiones <- data.frame(\n    numero = 1:16,\n    region = c(\n      \"Tarapac√°\", \"Antofagasta\", \"Atacama\", \"Coquimbo\", \"Valpara√≠so\",\n      \"O'Higgins\", \"Maule\", \"Biob√≠o\", \"La Araucan√≠a\", \"Los Lagos\",\n      \"Ays√©n\", \"Magallanes\", \"Metropolitana\", \"Los R√≠os\",\n      \"Arica y Parinacota\", \"√ëuble\"\n    )\n  )\n  regiones$region[match(x, regiones$numero)]\n}\n\nnombre_region(17)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] NA\n```\n\n\n:::\n:::\n\n## GitHub\n\nNo es sencillo aprender a usar GitHub, pero ya todos tienen su cuenta y primer repositorio! üë©üèΩ‚Äçüíª üë®üèΩ‚Äçüíª. Comencemos hoy con vocabulario üë©üèΩ‚Äçüè´\n\n## GitHub\n\n![](https://jhudatascience.org/Adv_Reproducibility_in_Cancer_Informatics/03-version-control-with-github_files/figure-html/1IJ_uFxJud7OdIAr6p8ZOzvYs-SGDqa7g4cUHtUld03I_g1014c75158f_0_120.png){fig-align=\"center\"}\n\n## GitHub\n\n![](https://jhudatascience.org/Adv_Reproducibility_in_Cancer_Informatics/03-version-control-with-github_files/figure-html/1IJ_uFxJud7OdIAr6p8ZOzvYs-SGDqa7g4cUHtUld03I_g1014c75158f_0_149.png){fig-align=\"center\"}\n\n## GitHub\n\n1. Remoto: en internet (GitHub).\n2. Local: en el computador.\n3. Repositorio = Proyecto.\n4. Usando GitHub, un proyecto existir√° tanto como repositorio remoto como repositorio local (es decir, estar√° en GitHub y tambi√©n en tu computador).\n\n\n## GitHub\n\n![](https://jhudatascience.org/Adv_Reproducibility_in_Cancer_Informatics/03-version-control-with-github_files/figure-html/1IJ_uFxJud7OdIAr6p8ZOzvYs-SGDqa7g4cUHtUld03I_g1014c75158f_0_90.png){fig-align=\"center\"}\n\n## Crear projecto en RStudio\n\n![](figures/1-paso.png){fig-align=\"center\"}\n\n## Crear projecto en RStudio\n\n![](figures/2-paso.png){fig-align=\"center\"}\n\n## Crear projecto en RStudio\n\n![](figures/3-paso.png){fig-align=\"center\"}\n\n## Crear projecto en RStudio\n\n![](figures/4-paso.png){fig-align=\"center\"}\n\n## Bibliograf√≠a general\n\n- [The Turing Way](https://book.the-turing-way.org/)\n- [Introduction to Earth Data Science](https://earthdatascience.org/courses/intro-to-earth-data-science/)\n- [Data Skills for Reproducible Research](https://psyteachr.github.io/reprores-v4/)\n- [Effective Data Science](https://eds-notes.zakvarty.com/)\n- [Computational Reproducibility](https://utrechtuniversity.github.io/workshop-computational-reproducibility/)\n- [Advanced Reproducibility in Cancer Informatics](https://jhudatascience.org/Adv_Reproducibility_in_Cancer_Informatics/index.html)\n- [Reproducible Data Science](https://ecorepsci.github.io/reproducible-science/project-organization.html)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}